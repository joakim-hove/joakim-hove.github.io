The data types available in ERT
===============================

Very briefly described the purpose of ERT is to pass uncertain paramater values
to a simulator [#]_, in a form which works as suitable input to the simulator and
then subsequently load the results from the simulator. This means that data must
be formatted in a form which the simulator can load, and also that ERT must be
able to read files generated by the simulator.

The data managed by ERT are organized in different *data types* described in
this chapter. Configuring the data used in the conditioning project is a very
important part of setting up a ERT configuration file - in practical terms this
is how you configure which uncertainty parameters should be studied. The data
types in ert can be categorized in two ways:

1. How the data type behaves dynamically: is it a static parameter like porosity
   or a relperm parameter - i.e. does it serve as *input* to the simulator, or
   is it a quantity which is generated as a result from the simulation. When
   understanding the model updating algorithm and process it is important to
   understand this difference properly.

2. How the data type is implemented, what type of files does it and read write,
   how is it configured and so on.




.. [#] *Simulator* should in this context be understood as the complete
       forward model, including various pre and post processing steps in
       addition to the actual reservoir simulation.


Parameters
----------

Scalar parameters with a template: GEN_KW
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

3D field parameters: FIELD
~~~~~~~~~~~~~~~~~~~~~~~~~~

2D Surface parameters: SURFACE
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

General vector parameters: GEN_PARAM
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



Simulated data
--------------

Summary: SUMMARY
~~~~~~~~~~~~~~~~


General data: GEN_DATA
~~~~~~~~~~~~~~~~~~~~~~


Keyword results: CUSTOM_KW
~~~~~~~~~~~~~~~~~~~~~~~~~~


EnKF heritage
-------------

With regards to the datatypes in ERT this is a part of the application where the
EnKF heritage shows through quite clearly, the datetypes offered by ERT would
probably be different if ERT was made for Ensemble Smoother from the outset.
Pecularites of EnKF heritage include:

1. The `FIELD` implementation can behave both as a dynamic quantity, i.e.
   pressure and saturation, and static property like porosity. In ERT it is
   currently *only used* as a parameter.

2. The parameter types have an internal pseudo time dependence corresponding to
   the "update time" induced by the EnKF scheme. This pseudo time dependence is
   not directly exposed to the user, but it is still part of the implementation
   and e.g. when writing plugins which work with parameter data managed by ERT
   you must relate to it.

3. The time dependence of the `GEN_DATA` implementation. This is just too
   complex, there have been numerous problems with people who configure the
   `GEN_DATA` keywords incorrectly.  


Observations
------------

  
